1. pods.yml

apiVersion: v1
kind: Pod
metadata:
  name: nodeapp
  labels:
    app: nodeapp
spec:
  containers:
    - name: nodeapp
      image: kammana/nodeapp:v3
      ports:
        - containerPort: 8080

2. pods.yml myapp

apiVersion: v1
kind: Pod
metadata:
  name: myapp
  labels:
    name: myapp
spec:
  containers:
    - name: myapp
      image: nginx
      resources:
        requests:
          memory: "128Mi"
          cpu: "250m"
        limits:
          memory: "256Mi"
          cpu: "500m"
      ports:
        - containerPort: 80

3.nginxsvc.yml Nodeport

apiVersion: v1
kind: Service
metadata:
  name: myapp
spec:
  selector:
    name: myapp
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30000
  type: NodePort

4.nginxsvc.yml LoadBalancer

apiVersion: v1
kind: Service
metadata:
  name: myapp
spec:
  selector:
    name: myapp
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30000
  type: LoadBalancer

5.ReplicaSet

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: nginx
spec:
  replicas: 3
  selector:
    matchExpressions:
      - {key: app, operator: In, values: [nginx]}
  template:
    metadata:
      name: nodeapp
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80

6.Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: myapp
        image: kammana/nodeapp:v1
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8080

7. To Create Secret

  kubectl create secret docker-registry my-registry-secret \
  --docker-server=<registry-url> \
  --docker-username=<username> \
  --docker-password=<password> \
  --docker-email=<email>

8. YAML file to Pull Private Image

  apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
spec:
  replicas: 3
  template:
    spec:
      containers:
      - name: my-app-container
        image: <registry-url>/<image-name>:<tag>
        ports:
        - containerPort: 8080
      imagePullSecrets:
      - name: my-registry-secret

